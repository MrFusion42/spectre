#!/usr/bin/env php
<?php

error_reporting(-1);
date_default_timezone_set('America/Mexico_City');

call_user_func(function () use($argv) {
  $vendor = array(
    dirname(dirname(dirname(__DIR__))).DIRECTORY_SEPARATOR.'autoload.php',
    dirname(__DIR__).DIRECTORY_SEPARATOR.'vendor'.DIRECTORY_SEPARATOR.'autoload.php',
  );

  foreach ($vendor as $file) {
    is_file($file) && require $file;
  }

  array_shift($argv);

  $args = array();
  $input = array();

  foreach ($argv as $i => $one) {
    if (substr($one, 0, 1) !== '-') {
      if (is_dir($one)) {
        foreach (glob("$one/*-spec.php") as $file) {
          $input []= realpath($file);
        }
      } else {
        $input []= realpath($one);
      }
    } elseif (preg_match('/--reporter=(\w+)|-r(\w+)/', $one, $match)) {
      $args['reporter'] = !empty($match[2]) ? $match[2] : $match[1];
    }
  }


  $cc = array();

  foreach (array_unique(array_filter($input, 'is_file')) as $spec) {
    $filter = new \PHP_CodeCoverage_Filter;

    // TODO: allow configuration
    $filter->addDirectoryToBlacklist('vendor');
    $filter->addDirectoryToBlacklist('bin/spectre');

    $coverage = new \PHP_CodeCoverage(null, $filter);
    $coverage->start($file);

    require $spec;

    $cc[$file] = $coverage;
  }


  run_specs(function ($report) use($args, $cc) {
    if (!$report) {
      echo "Missing specs\n";
      exit(1);
    }

    foreach ($cc as $file => $coverage) {
      $coverage->stop();
      $name = basename($file, '.php');

      $html = new \PHP_CodeCoverage_Report_HTML;
      $html->process($coverage, "coverage/$name");

      $clover = new \PHP_CodeCoverage_Report_Clover;
      $clover->process($coverage, "coverage/$name.xml");
    }


    $reporter = !empty($args['tap']) ? 'TAP' : (!empty($args['reporter']) ? $args['reporter'] : 'Basic');
    $klass = "\\Spectre\\Report\\$reporter";
    $tap = new $klass($report);

    echo $tap;
    exit((int)(!!$tap->status));
  });
});
